{"version":3,"sources":["../src/utils.ts","../src/named.ts","../src/pitch.ts","../src/note.ts","../src/interval.ts","../src/distance.ts","../index.ts","../data.ts","../node_modules/howler/dist/howler.js","index.js","../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["REGEX","cache","parse","pitchName","note","num","chroma","intervals","names","chord","transpose","fraction","value","name","semitones","pcset","midi","freq","keyScale","mode","chords","triads","scale","up","_chord","require","_tonal","_chordDictionary","_howler","sound","Howl","src","onload","console","log","soundEngine","init","onloaderror","e","msg","startNotes","startNoteSelector","document","querySelector","octaveSelector","buttons","intervalsInChord","notesInChord","selectedStartNote","selectedOctave","selectedChord","app","setupStartNotes","setupOctaves","setupButtons","setupEventListeners","_this","forEach","noteName","noteNameOption","createElement","appendChild","i","octaveNumber","_this2","chordNames","entries","map","entry","aliases","chordName","chordButton","_this3","addEventListener","event","target","classList","contains","innerText","displayAndPlayChord","chordIntervals","join","startNotewithOctave","chordNotes","val","play","elementName","content","element","innerHTML","lengthOfNote","timeIndex","soundSequence","chordMidiNumbers","volume","noteMidiNumber","toString","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","getElementById","remove","stackTrace","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","some","cb"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Fill a string with a repeated character\n *\n * @param character\n * @param repetition\n */\nexport const fillStr = (s: string, n: number) => Array(Math.abs(n) + 1).join(s);\n\nexport function deprecate<\n  ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>\n>(original: string, alternative: string, fn: ResultFn) {\n  return function (this: unknown, ...args: unknown[]): ReturnType<ResultFn> {\n    // tslint:disable-next-line\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\n","export interface Named {\n  readonly name: string;\n}\n\nexport interface NamedFound {\n  readonly empty: false;\n}\n\nexport interface NotFound extends Named {\n  readonly empty: true;\n  readonly name: \"\";\n}\n\nexport function isNamed(src: any): src is Named {\n  return src !== null && typeof src === \"object\" && typeof src.name === \"string\"\n    ? true\n    : false;\n}\n","import { Named } from \"./named\";\n\ntype Fifths = number;\ntype Octaves = number;\nexport type Direction = 1 | -1;\n\nexport type PitchClassCoordinates = [Fifths];\nexport type NoteCoordinates = [Fifths, Octaves];\nexport type IntervalCoordinates = [Fifths, Octaves, Direction];\nexport type PitchCoordinates =\n  | PitchClassCoordinates\n  | NoteCoordinates\n  | IntervalCoordinates;\n\n/**\n * Pitch properties\n *\n * - {number} step - The step number: 0 = C, 1 = D, ... 6 = B\n * - {number} alt - Number of alterations: -2 = 'bb', -1 = 'b', 0 = '', 1 = '#', ...\n * - {number} [oct] = The octave (undefined when is a coord class)\n * - {number} [dir] = Interval direction (undefined when is not an interval)\n */\nexport interface Pitch {\n  readonly step: number;\n  readonly alt: number;\n  readonly oct?: number; // undefined for pitch classes\n  readonly dir?: Direction; // undefined for notes\n}\n\nexport function isPitch(pitch: any): pitch is Pitch {\n  return pitch !== null &&\n    typeof pitch === \"object\" &&\n    typeof pitch.step === \"number\" &&\n    typeof pitch.alt === \"number\"\n    ? true\n    : false;\n}\n\n// The number of fifths of [C, D, E, F, G, A, B]\nconst FIFTHS = [0, 2, 4, -1, 1, 3, 5];\n// The number of octaves it span each step\nconst STEPS_TO_OCTS = FIFTHS.map((fifths: number) =>\n  Math.floor((fifths * 7) / 12)\n);\n\nexport function encode(pitch: Pitch): PitchCoordinates {\n  const { step, alt, oct, dir = 1 } = pitch;\n  const f = FIFTHS[step] + 7 * alt;\n  if (oct === undefined) {\n    return [dir * f];\n  }\n  const o = oct - STEPS_TO_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n}\n\n// We need to get the steps from fifths\n// Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\n// We add 1 to fifths to avoid negative numbers, so:\n// for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\nconst FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\n\nexport function decode(coord: PitchCoordinates): Pitch {\n  const [f, o, dir] = coord;\n  const step = FIFTHS_TO_STEPS[unaltered(f)];\n  const alt = Math.floor((f + 1) / 7);\n  if (o === undefined) {\n    return { step, alt, dir };\n  }\n  const oct = o + 4 * alt + STEPS_TO_OCTS[step];\n  return { step, alt, oct, dir };\n}\n\n// Return the number of fifths as if it were unaltered\nfunction unaltered(f: number): number {\n  const i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\n","import { isNamed, Named } from \"./named\";\nimport { decode, encode, isPitch, Pitch, PitchCoordinates } from \"./pitch\";\nimport { fillStr } from \"./utils\";\n\nexport type NoteWithOctave = string;\nexport type PcName = string;\nexport type NoteName = NoteWithOctave | PcName;\nexport type NoteLiteral = NoteName | Pitch | Named;\n\nexport interface Note extends Pitch, Named {\n  readonly empty: boolean;\n  readonly name: NoteName;\n  readonly letter: string;\n  readonly acc: string;\n  readonly pc: PcName;\n  readonly chroma: number;\n  readonly height: number;\n  readonly coord: PitchCoordinates;\n  readonly midi: number | null;\n  readonly freq: number | null;\n}\n\nexport interface NoNote extends Partial<Note> {\n  empty: true;\n  name: \"\";\n  pc: \"\";\n  acc: \"\";\n}\nconst NoNote: NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\n\nconst cache: Map<NoteLiteral | undefined, Note | NoNote> = new Map();\n\nexport const stepToLetter = (step: number) => \"CDEFGAB\".charAt(step);\nexport const altToAcc = (alt: number): string =>\n  alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nexport const accToAlt = (acc: string): number =>\n  acc[0] === \"b\" ? -acc.length : acc.length;\n\n/**\n * Given a note literal (a note name or a note object), returns the Note object\n * @example\n * note('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\n */\nexport function note(src: NoteLiteral): Note | NoNote {\n  const stringSrc = JSON.stringify(src);\n\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n\n  const value =\n    typeof src === \"string\"\n      ? parse(src)\n      : isPitch(src)\n      ? note(pitchName(src))\n      : isNamed(src)\n      ? note(src.name)\n      : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\n\ntype NoteTokens = [string, string, string, string];\n\nconst REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\n\n/**\n * @private\n */\nexport function tokenizeNote(str: string): NoteTokens {\n  const m = REGEX.exec(str) as string[];\n  return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\n}\n\n/**\n * @private\n */\nexport function coordToNote(noteCoord: PitchCoordinates): Note {\n  return note(decode(noteCoord)) as Note;\n}\n\nconst mod = (n: number, m: number) => ((n % m) + m) % m;\n\nconst SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName: NoteName): Note | NoNote {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : undefined;\n  const coord = encode({ step, alt, oct });\n\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height =\n    oct === undefined\n      ? mod(SEMI[step] + alt, 12) - 12 * 99\n      : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === undefined ? null : Math.pow(2, (height - 69) / 12) * 440;\n\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step,\n  };\n}\n\nfunction pitchName(props: Pitch): NoteName {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\n","import { isNamed, Named } from \"./named\";\nimport {\n  decode,\n  Direction,\n  encode,\n  IntervalCoordinates,\n  isPitch,\n  Pitch,\n  PitchCoordinates,\n} from \"./pitch\";\nimport { fillStr } from \"./utils\";\n\nexport type IntervalName = string;\nexport type IntervalLiteral = IntervalName | Pitch | Named;\n\ntype Quality =\n  | \"dddd\"\n  | \"ddd\"\n  | \"dd\"\n  | \"d\"\n  | \"m\"\n  | \"M\"\n  | \"P\"\n  | \"A\"\n  | \"AA\"\n  | \"AAA\"\n  | \"AAAA\";\ntype Type = \"perfectable\" | \"majorable\";\n\nexport interface Interval extends Pitch, Named {\n  readonly empty: boolean;\n  readonly name: IntervalName;\n  readonly num: number;\n  readonly q: Quality;\n  readonly type: Type;\n  readonly step: number;\n  readonly alt: number;\n  readonly dir: Direction;\n  readonly simple: number;\n  readonly semitones: number;\n  readonly chroma: number;\n  readonly coord: IntervalCoordinates;\n  readonly oct: number;\n}\n\nexport interface NoInterval extends Partial<Interval> {\n  readonly empty: true;\n  readonly name: \"\";\n  readonly acc: \"\";\n}\n\nconst NoInterval: NoInterval = { empty: true, name: \"\", acc: \"\" };\n\n// shorthand tonal notation (with quality after number)\nconst INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\n// standard shorthand notation (with quality before number)\nconst INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nconst REGEX = new RegExp(\n  \"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\"\n);\n\ntype IntervalTokens = [string, string];\n\n/**\n * @private\n */\nexport function tokenizeInterval(str?: IntervalName): IntervalTokens {\n  const m = REGEX.exec(`${str}`);\n  if (m === null) {\n    return [\"\", \"\"];\n  }\n  return m[1] ? [m[1], m[2]] : [m[4], m[3]];\n}\n\nconst cache: { [key in string]: Interval | NoInterval } = {};\n\n/**\n * Get interval properties. It returns an object with:\n *\n * - name: the interval name\n * - num: the interval number\n * - type: 'perfectable' or 'majorable'\n * - q: the interval quality (d, m, M, A)\n * - dir: interval direction (1 ascending, -1 descending)\n * - simple: the simplified number\n * - semitones: the size in semitones\n * - chroma: the interval chroma\n *\n * @param {string} interval - the interval name\n * @return {Object} the interval properties\n *\n * @example\n * import { interval } from '@tonaljs/core'\n * interval('P5').semitones // => 7\n * interval('m3').type // => 'majorable'\n */\nexport function interval(src: IntervalLiteral): Interval | NoInterval {\n  return typeof src === \"string\"\n    ? cache[src] || (cache[src] = parse(src))\n    : isPitch(src)\n    ? interval(pitchName(src))\n    : isNamed(src)\n    ? interval(src.name)\n    : NoInterval;\n}\n\nconst SIZES = [0, 2, 4, 5, 7, 9, 11];\nconst TYPES = \"PMMPPMM\";\nfunction parse(str?: string): Interval | NoInterval {\n  const tokens = tokenizeInterval(str);\n  if (tokens[0] === \"\") {\n    return NoInterval;\n  }\n  const num = +tokens[0];\n  const q = tokens[1] as Quality;\n  const step = (Math.abs(num) - 1) % 7;\n  const t = TYPES[step];\n  if (t === \"M\" && q === \"P\") {\n    return NoInterval;\n  }\n  const type = t === \"M\" ? \"majorable\" : \"perfectable\";\n\n  const name = \"\" + num + q;\n  const dir = num < 0 ? -1 : 1;\n  const simple = num === 8 || num === -8 ? num : dir * (step + 1);\n  const alt = qToAlt(type, q);\n  const oct = Math.floor((Math.abs(num) - 1) / 7);\n  const semitones = dir * (SIZES[step] + alt + 12 * oct);\n  const chroma = (((dir * (SIZES[step] + alt)) % 12) + 12) % 12;\n  const coord = encode({ step, alt, oct, dir }) as IntervalCoordinates;\n  return {\n    empty: false,\n    name,\n    num,\n    q,\n    step,\n    alt,\n    dir,\n    type,\n    simple,\n    semitones,\n    chroma,\n    coord,\n    oct,\n  };\n}\n\n/**\n * @private\n *\n * forceDescending is used in the case of unison (#243)\n */\nexport function coordToInterval(\n  coord: PitchCoordinates,\n  forceDescending?: boolean\n): Interval {\n  const [f, o = 0] = coord;\n  const isDescending = f * 7 + o * 12 < 0;\n  const ivl: IntervalCoordinates =\n    forceDescending || isDescending ? [-f, -o, -1] : [f, o, 1];\n  return interval(decode(ivl)) as Interval;\n}\n\nfunction qToAlt(type: Type, q: string): number {\n  return (q === \"M\" && type === \"majorable\") ||\n    (q === \"P\" && type === \"perfectable\")\n    ? 0\n    : q === \"m\" && type === \"majorable\"\n    ? -1\n    : /^A+$/.test(q)\n    ? q.length\n    : /^d+$/.test(q)\n    ? -1 * (type === \"perfectable\" ? q.length : q.length + 1)\n    : 0;\n}\n\n// return the interval name of a pitch\nfunction pitchName(props: Pitch): string {\n  const { step, alt, oct = 0, dir } = props;\n  if (!dir) {\n    return \"\";\n  }\n  const calcNum = step + 1 + 7 * oct;\n  // this is an edge case: descending pitch class unison (see #243)\n  const num = calcNum === 0 ? step + 1 : calcNum;\n  const d = dir < 0 ? \"-\" : \"\";\n  const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = d + num + altToQ(type, alt);\n  return name;\n}\n\nfunction altToQ(type: Type, alt: number): Quality {\n  if (alt === 0) {\n    return type === \"majorable\" ? \"M\" : \"P\";\n  } else if (alt === -1 && type === \"majorable\") {\n    return \"m\";\n  } else if (alt > 0) {\n    return fillStr(\"A\", alt) as Quality;\n  } else {\n    return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1) as Quality;\n  }\n}\n","import {\n  coordToInterval,\n  interval as asInterval,\n  IntervalLiteral,\n  IntervalName,\n} from \"./interval\";\nimport { coordToNote, note as asNote, NoteLiteral, NoteName } from \"./note\";\nimport { PitchCoordinates } from \"./pitch\";\n\n/**\n * Transpose a note by an interval.\n *\n * @param {string} note - the note or note name\n * @param {string} interval - the interval or interval name\n * @return {string} the transposed note name or empty string if not valid notes\n * @example\n * import { tranpose } from \"@tonaljs/core\"\n * transpose(\"d3\", \"3M\") // => \"F#3\"\n * transpose(\"D\", \"3M\") // => \"F#\"\n * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(pc => transpose(pc, \"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\n */\nexport function transpose(\n  noteName: NoteLiteral,\n  intervalName: IntervalLiteral | [number, number]\n): NoteName {\n  const note = asNote(noteName);\n  const intervalCoord = Array.isArray(intervalName)\n    ? intervalName\n    : asInterval(intervalName).coord;\n  if (note.empty || !intervalCoord || intervalCoord.length < 2) {\n    return \"\";\n  }\n  const noteCoord = note.coord;\n  const tr: PitchCoordinates =\n    noteCoord.length === 1\n      ? [noteCoord[0] + intervalCoord[0]]\n      : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\n  return coordToNote(tr).name;\n}\n\n// Private\nexport function tonicIntervalsTransposer(\n  intervals: string[],\n  tonic: string | undefined | null\n) {\n  const len = intervals.length;\n  return (normalized: number) => {\n    if (!tonic) return \"\";\n    const index =\n      normalized < 0 ? (len - (-normalized % len)) % len : normalized % len;\n    const octaves = Math.floor(normalized / len);\n    const root = transpose(tonic, [0, octaves]);\n    return transpose(root, intervals[index]);\n  };\n}\n\n/**\n * Find the interval distance between two notes or coord classes.\n *\n * To find distance between coord classes, both notes must be coord classes and\n * the interval is always ascending\n *\n * @param {Note|string} from - the note or note name to calculate distance from\n * @param {Note|string} to - the note or note name to calculate distance to\n * @return {string} the interval name or empty string if not valid notes\n *\n */\nexport function distance(\n  fromNote: NoteLiteral,\n  toNote: NoteLiteral\n): IntervalName {\n  const from = asNote(fromNote);\n  const to = asNote(toNote);\n  if (from.empty || to.empty) {\n    return \"\";\n  }\n\n  const fcoord = from.coord;\n  const tcoord = to.coord;\n  const fifths = tcoord[0] - fcoord[0];\n  const octs =\n    fcoord.length === 2 && tcoord.length === 2\n      ? tcoord[1] - fcoord[1]\n      : -Math.floor((fifths * 7) / 12);\n\n  // If it's unison and not pitch class, it can be descending interval (#243)\n  const forceDescending =\n    to.height === from.height &&\n    to.midi !== null &&\n    from.midi !== null &&\n    from.step > to.step;\n  return coordToInterval([fifths, octs], forceDescending).name;\n}\n","// ascending range\nfunction ascR(b: number, n: number) {\n  const a = [];\n  // tslint:disable-next-line:curly\n  for (; n--; a[n] = n + b);\n  return a;\n}\n// descending range\nfunction descR(b: number, n: number) {\n  const a = [];\n  // tslint:disable-next-line:curly\n  for (; n--; a[n] = b - n);\n  return a;\n}\n\n/**\n * Creates a numeric range\n *\n * @param {number} from\n * @param {number} to\n * @return {Array<number>}\n *\n * @example\n * range(-2, 2) // => [-2, -1, 0, 1, 2]\n * range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(from: number, to: number): number[] {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\n\n/**\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} collection\n * @return {Array} the rotated collection\n *\n * @example\n * rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate<T>(times: number, arr: T[]): T[] {\n  const len = arr.length;\n  const n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the collection with the null values removed\n * @function\n * @param {Array} collection\n * @return {Array}\n *\n * @example\n * compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport function compact(arr: any[]): any[] {\n  return arr.filter((n) => n === 0 || n);\n}\n\n/**\n * Randomizes the order of the specified collection in-place, using the Fisher–Yates shuffle.\n *\n * @function\n * @param {Array} collection\n * @return {Array} the collection shuffled\n *\n * @example\n * shuffle([\"C\", \"D\", \"E\", \"F\"]) // => [...]\n */\nexport function shuffle(arr: any[], rnd = Math.random): any[] {\n  let i: number;\n  let t: any;\n  let m: number = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\n\n/**\n * Get all permutations of an collection\n *\n * @param {Array} collection - the collection\n * @return {Array<Array>} an collection with all the permutations\n * @example\n * permutations([\"a\", \"b\", \"c\"])) // =>\n * [\n *   [\"a\", \"b\", \"c\"],\n *   [\"b\", \"a\", \"c\"],\n *   [\"b\", \"c\", \"a\"],\n *   [\"a\", \"c\", \"b\"],\n *   [\"c\", \"a\", \"b\"],\n *   [\"c\", \"b\", \"a\"]\n * ]\n */\nexport function permutations(arr: any[]): any[] {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\n\nexport default {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle,\n};\n","/**\n * @private\n * Chord List\n * Source: https://en.wikibooks.org/wiki/Music_Theory/Complete_List_of_Chord_Patterns\n * Format: [\"intervals\", \"full name\", \"abrv1 abrv2\"]\n */\nconst CHORDS: string[][] = [\n  // ==Major==\n  [\"1P 3M 5P\", \"major\", \"M ^  maj\"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 Δ ma7 M7 Maj7 ^7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 Δ9 ^9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth/ninth\", \"6/9 69 M69\"],\n  [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\n  [\n    \"1P 3M 5P 7M 11A\",\n    \"major seventh sharp eleventh\",\n    \"maj#4 Δ#4 Δ#11 M7#11 ^7#11 maj7#11\",\n  ],\n  // ==Minor==\n  // '''Normal'''\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\n    \"1P 3m 5P 7M\",\n    \"minor/major seventh\",\n    \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -Δ7 mΔ -^7\",\n  ],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\n  [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\n  // '''Diminished'''\n  [\"1P 3m 5d\", \"diminished\", \"dim ° o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 °7 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 ø -7b5 h7 h\"],\n  // ==Dominant/Seventh==\n  // '''Normal'''\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  // '''Altered'''\n  [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  // '''Suspended'''\n  [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\n  [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\n  [\n    \"1P 4P 5P 7m 9m\",\n    \"suspended fourth flat ninth\",\n    \"b9sus phryg 7b9sus 7b9sus4\",\n  ],\n  // ==Other==\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\n  [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\n  [\n    \"1P 3M 5P 7M 9M 11A\",\n    \"major sharp eleventh (lydian)\",\n    \"maj9#11 Δ9#11 ^9#11\",\n  ],\n  // ==Legacy==\n  [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\n  [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\n  [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\n  [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\n  [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\n  [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\n  [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\n  [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\n  [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\n  [\"1P 3M 5d\", \"\", \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\n  [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\n  [\"1P 3M 5d 7m\", \"\", \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\n  [\"1P 3M 7m\", \"\", \"7no5\"],\n  [\"1P 3M 7m 13m\", \"\", \"7b13\"],\n  [\"1P 3M 7m 9M\", \"\", \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\n  [\"1P 3m 4P 5P\", \"\", \"madd4\"],\n  [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\n  [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", \"\", \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\n  [\"1P 3m 5d 7M\", \"\", \"oM7\"],\n  [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\n  [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\n  [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\n  [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\n  [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\n  [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"],\n];\n\nexport default CHORDS;\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import { chord } from '@tonaljs/chord';\r\nimport { transpose, note } from '@tonaljs/tonal';\r\nimport { entries } from '@tonaljs/chord-dictionary';\r\nimport { Howler, howl } from 'howler';\r\n\r\nconst sound = new Howl({\r\n    src: ['assests/pianosprite.mp3'],\r\n    onload() {\r\n        console.log('Sound file');\r\n        soundEngine.init();\r\n    },\r\n    onloaderror(e, msg) {\r\n        console.log('Error',e ,msg);\r\n    }\r\n});\r\n\r\nconst startNotes = ['C', 'C#', 'Db', 'D', 'D#', 'Eb', 'E', 'F', 'F#', 'Gb', 'G', 'G#', 'Ab','A', 'A#', 'Bb', 'B'];\r\n\r\nconst startNoteSelector = document.querySelector('#start-note');\r\nconst octaveSelector = document.querySelector('#octave');\r\nconst buttons = document.querySelector('.buttons');\r\nconst intervalsInChord = document.querySelector('.intervals-in-chord');\r\nconst notesInChord = document.querySelector('.notes-in-chord');\r\n\r\nlet selectedStartNote = 'C';\r\nlet selectedOctave = '1';\r\nlet selectedChord;\r\n\r\nconst app = {\r\n    init() {\r\n        this.setupStartNotes();\r\n        this.setupOctaves();\r\n        this.setupButtons();\r\n        this.setupEventListeners();\r\n    },\r\n\r\n    setupStartNotes() {\r\n        startNotes.forEach(noteName => {\r\n            let noteNameOption = this.createElement('option', noteName);\r\n            startNoteSelector.appendChild(noteNameOption);\r\n        });\r\n    },\r\n\r\n    setupOctaves() {\r\n        for (let i=1; i<=4; i++) {\r\n            let octaveNumber = this.createElement('option', i);\r\n            octaveSelector.appendChild(octaveNumber);\r\n        }\r\n    },\r\n\r\n    setupButtons() {\r\n        const chordNames = entries().map(entry => {\r\n            return entry.aliases[0];\r\n        });   \r\n        chordNames.forEach(chordName => {\r\n            let chordButton = this.createElement('button', chordName);\r\n            buttons.appendChild(chordButton);\r\n        });\r\n    }, \r\n\r\n    setupEventListeners() {\r\n        startNoteSelector.addEventListener('change', () => {\r\n            selectedStartNote = startNoteSelector.value;\r\n            console.log(selectedStartNote);\r\n        });\r\n        octaveSelector.addEventListener('change', () => {\r\n            selectedOctave = octaveSelector.value;\r\n            console.log(selectedOctave);\r\n        });\r\n        buttons.addEventListener('click', (event) => {\r\n            if (event.target.classList.contains('buttons')) {\r\n                return;\r\n            }\r\n            selectedChord = event.target.innerText;\r\n            this.displayAndPlayChord(selectedChord);\r\n        });\r\n    },\r\n\r\n    displayAndPlayChord(selectedChord) {\r\n        let chordIntervals = chord(selectedChord).intervals;\r\n        intervalsInChord.innerText = chordIntervals.join(' - ');\r\n\r\n        const startNotewithOctave = selectedStartNote + selectedOctave;\r\n        let chordNotes = chordIntervals.map(val => {\r\n            return transpose(startNotewithOctave, val);\r\n        });\r\n        notesInChord.innerText = chordNotes.join(' - ');\r\n        soundEngine.play(chordNotes);\r\n    },\r\n\r\n    createElement(elementName, content) {\r\n        let element = document.createElement(elementName);\r\n        element.innerHTML = content;\r\n        return element;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst soundEngine = {\r\n    init() {\r\n        const lengthOfNote = 2400;\r\n        let timeIndex = 0;\r\n        for (let i = 24; i <= 96; i++) {\r\n            sound['_sprite'][i] = [timeIndex, lengthOfNote]\r\n            timeIndex += lengthOfNote;\r\n        }\r\n    },\r\n    play(soundSequence){\r\n        const chordMidiNumbers = soundSequence.map(noteName => {\r\n            return note(noteName).midi;\r\n        });\r\n        sound.volume(0.75);\r\n        chordMidiNumbers.forEach(noteMidiNumber => {\r\n            console.log(noteMidiNumber);\r\n            sound.play(noteMidiNumber.toString());\r\n        });\r\n\r\n    }\r\n}\r\n\r\napp.init();\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}